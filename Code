
import tkinter as tk
from tkinter import messagebox
import sqlite3

# Connect to the database
conn = sqlite3.connect('student_marks.db')
cursor = conn.cursor()

# Create the table if it doesn't exist
cursor.execute('''
    CREATE TABLE IF NOT EXISTS student_marks (
        id INTEGER PRIMARY KEY,
        name TEXT,
        marks INTEGER
    )
''')

def add_student():
    name = name_entry.get()
    marks = marks_entry.get()
    cursor.execute('INSERT INTO student_marks (name, marks) VALUES (?, ?)', (name, marks))
    conn.commit()
    messagebox.showinfo("Success", "Student added successfully!")

def view_students():
    student_list.delete(0, tk.END)
    cursor.execute('SELECT * FROM student_marks')
    students = cursor.fetchall()
    for student in students:
        student_list.insert(tk.END, f"ID: {student[0]}, Name: {student[1]}, Marks: {student[2]}")

def update_marks():
    id = id_entry.get()
    marks = marks_entry.get()
    cursor.execute('UPDATE student_marks SET marks = ? WHERE id = ?', (marks, id))
    conn.commit()
    messagebox.showinfo("Success", "Marks updated successfully!")

def delete_student():
    id = id_entry.get()
    cursor.execute('DELETE FROM student_marks WHERE id = ?', (id,))
    conn.commit()
    messagebox.showinfo("Success", "Student deleted successfully!")

root =tk.Tk()
root.title("Student Mark Tracker")
root.geometry("800x6000")

name_label = tk.Label(root, text="Name:",font=("Arial",16))
name_label.pack()
name_entry = tk.Entry(root)
name_entry.pack()

marks_label = tk.Label(root, text="Marks:",font=("Arial",16))
marks_label.pack()
marks_entry = tk.Entry(root)
marks_entry.pack()

id_label = tk.Label(root, text="ID:",font=("Arial",16))
id_label.pack()
id_entry = tk.Entry(root)
id_entry.pack()

add_button = tk.Button(root, text="Add Student", command=add_student,font=("Arial",12),width=15)
add_button.pack()

view_button = tk.Button(root, text="View Students", command=view_students,font=("Arial",12),width=15)
view_button.pack()

update_button = tk.Button(root, text="Update Marks", command=update_marks,font=("Arial",12),width=15)
update_button.pack()

delete_button = tk.Button(root, text="Delete Student", command=delete_student,font=("Arial",12),width=15)
delete_button.pack()

student_list = tk.Listbox(root,font=(10))
student_list.pack()

root.mainloop()

conn.close()
